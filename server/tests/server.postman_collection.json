{
	"info": {
		"_postman_id": "3a9130b4-8907-4725-9994-e146be7e0780",
		"name": "testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23082666"
	},
	"item": [
		{
			"name": "SETUP/POST",
			"item": [
				{
					"name": "POST /userAccounts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"test_user\", jsonData._id);\r",
									"pm.collectionVariables.set(\"test_user_email\", jsonData.email)\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Peter\",\r\n    \"surname\": \"Pennywhacker\",\r\n    \"email\": \"peterpenny@yahoo.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userAccounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /userAccounts 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"test_user_2\", jsonData._id);\r",
									"pm.collectionVariables.set(\"test_user_2_email\", jsonData.email)\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Penny\",\r\n    \"surname\": \"Peterwhacker\",\r\n    \"email\": \"pennypeter@yahoo.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userAccounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /userAccounts/:id/entry_list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"test_user_entry\", jsonData._id);\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"location\": \"Lindholmen\",\r\n    \"text\": \"Attended university lecture\",\r\n    \"date_date\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}/entry_list",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}",
								"entry_list"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /entries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"lone_entry\", jsonData._id);\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"location\": \"Norway\",\r\n    \"text\": \"Traveled for work\",\r\n    \"date_date\": \"2020-02-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /entries/:id/uploaded_entities_list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"test_user_entry_uploaded_entity\", jsonData._id)\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"file\": \"exampleFile\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}/uploaded_entities_list",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}",
								"uploaded_entities_list"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /entries/:id/uploaded_entities_list 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"test_user_entry_uploaded_entity\", jsonData._id)\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"file\": \"exampleFile\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}/uploaded_entities_list",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}",
								"uploaded_entities_list"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /uploadedEntities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"lone_uploaded_entity\", jsonData._id);\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"file\": \"testImage\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/uploadedEntities",
							"host": [
								"{{host}}"
							],
							"path": [
								"uploadedEntities"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /checkEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{test_user_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/checkEmail",
							"host": [
								"{{host}}"
							],
							"path": [
								"checkEmail"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /userPasswords",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"{{test_user}}\",\r\n    \"password\": \"Lettuce123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userPasswords",
							"host": [
								"{{host}}"
							],
							"path": [
								"userPasswords"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{test_user_email}}\",\r\n    \"password\": \"Lettuce123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /verifyPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"{{test_user}}\",\r\n    \"password\": \"Lettuce123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/verifyPassword",
							"host": [
								"{{host}}"
							],
							"path": [
								"verifyPassword"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "GET /api",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}",
							"host": [
								"{{host}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /entries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /entries/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /entries/:id/uploaded_entities_list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData.entities).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}/uploaded_entities_list",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}",
								"uploaded_entities_list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /entries/:id/uploaded_entities_list/:uploaded_entity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}/uploaded_entities_list/{{test_user_entry_uploaded_entity}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}",
								"uploaded_entities_list",
								"{{test_user_entry_uploaded_entity}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /userAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /userAccounts/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /userAccounts/:id/entry_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}/entry_list",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}",
								"entry_list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /userAccounts/:id/entry_list/:entry_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}/entry_list/{{test_user_entry}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}",
								"entry_list",
								"{{test_user_entry}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /statistics/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/statistics/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"statistics",
								"{{test_user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /userPasswords",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/userPasswords",
							"host": [
								"{{host}}"
							],
							"path": [
								"userPasswords"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /userPasswords/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/userPasswords/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userPasswords",
								"{{test_user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /uploadedEntities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/uploadedEntities",
							"host": [
								"{{host}}"
							],
							"path": [
								"uploadedEntities"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /uploadedEntities/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Expected response format\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data types and format of the response\", function() {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/uploadedEntities/{{test_user_entry_uploaded_entity}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"uploadedEntities",
								"{{test_user_entry_uploaded_entity}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "PATCH /entries/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Text patched\", function() {\r",
									"    pm.expect(jsonData.text).to.be.equal(\"Decided to paraglide instead.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"Decided to paraglide instead.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /userAccounts/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Surname patched\", function() {\r",
									"    pm.expect(jsonData.surname).to.be.equal(\"Poindexter\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"surname\": \"Poindexter\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT /entries/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Entry updated\", function() {\r",
									"    pm.expect(jsonData.text).to.be.equal(\"Traveled for vacation.\");\r",
									"    pm.expect(jsonData.location).to.be.equal(\"Korea\");\r",
									"    pm.expect(jsonData.date_date).to.be.equal(\"2022-10-10T00:00:00.000Z\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"Traveled for vacation.\",\r\n    \"location\": \"Korea\",\r\n    \"date_date\": \"2022-10-10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{lone_entry}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{lone_entry}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /uploadedEntities/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Entry updated\", function() {\r",
									"    pm.expect(jsonData.file).to.be.equal(\"newfile\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"file\": \"newfile\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/uploadedEntities/{{lone_uploaded_entity}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"uploadedEntities",
								"{{lone_uploaded_entity}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /userAccounts/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Entry updated\", function() {\r",
									"    pm.expect(jsonData.first_name).to.be.equal(\"Penny\");\r",
									"    pm.expect(jsonData.surname).to.be.equal(\"Peterwhacker\");\r",
									"    pm.expect(jsonData.email).to.be.equal(\"peterwhack@aol.com\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Penny\",\r\n    \"surname\": \"Peterwhacker\",\r\n    \"email\": \"peterwhack@aol.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /userPasswords/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{test_user}}\",\r\n    \"password\": \"Carrot123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/userPasswords/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userPasswords",
								"{{test_user}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE /entries/:id/uploaded_entities_list/:uploaded_entity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/entries/{{test_user_entry}}/uploaded_entities_list/{{test_user_entry_uploaded_entity}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{test_user_entry}}",
								"uploaded_entities_list",
								"{{test_user_entry_uploaded_entity}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /userAccounts/:id/entry_list/:entry_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user}}/entry_list/{{test_user_entry}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user}}",
								"entry_list",
								"{{test_user_entry}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /entries/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries/{{lone_entry}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries",
								"{{lone_entry}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /entries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/entries",
							"host": [
								"{{host}}"
							],
							"path": [
								"entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /userAccounts/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts/{{test_user_2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts",
								"{{test_user_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /userAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/userAccounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"userAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /userPasswords/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/userPasswords/{{test_user}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"userPasswords",
								"{{test_user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /userPasswords",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/userPasswords",
							"host": [
								"{{host}}"
							],
							"path": [
								"userPasswords"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /uploadedEntities/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/uploadedEntities/{{lone_uploaded_entity}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"uploadedEntities",
								"{{lone_uploaded_entity}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /uploadedEntities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Expected status code response\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/uploadedEntities",
							"host": [
								"{{host}}"
							],
							"path": [
								"uploadedEntities"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// pm.test(\"Status code is 200\", function() {",
					"//     pm.response.to.have.status(200);",
					"// });"
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "test_user",
			"value": "null",
			"type": "string"
		},
		{
			"key": "test_user_email",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_user_entry",
			"value": ""
		},
		{
			"key": "test_user_entry_uploaded_entity",
			"value": "",
			"type": "string"
		},
		{
			"key": "lone_entry",
			"value": ""
		},
		{
			"key": "lone_uploaded_entity",
			"value": ""
		},
		{
			"key": "test_user_2",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_user_2_email",
			"value": "",
			"type": "string"
		}
	]
}