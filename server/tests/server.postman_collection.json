{
  "info": {
    "_postman_id": "3a9130b4-8907-4725-9994-e146be7e0780",
    "name": "testing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "23082666"
  },
  "item": [
    {
      "name": "SETUP",
      "item": [
        {
          "name": "POST /entries",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();\r",
                  "pm.collectionVariables.set(\"entry_1\", jsonData._id);\r",
                  "\r",
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"location\": \"Norway\",\r\n    \"text\": \"Traveled for work\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/entries",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "entries"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST /entries 2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();\r",
                  "pm.collectionVariables.set(\"entry_2\", jsonData._id);\r",
                  "\r",
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"location\": \"Lindholmen\",\r\n    \"text\": \"Attended university lecture\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/entries",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "entries"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST /userAccounts",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();\r",
                  "pm.collectionVariables.set(\"test_user\", jsonData._id);\r",
                  "\r",
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"first_name\": \"Peter\",\r\n    \"surname\": \"Pennywhacker\",\r\n    \"email\": \"peterpenny@yahoo.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/userAccounts",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userAccounts"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST /uploadedEntities",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();\r",
                  "pm.collectionVariables.set(\"uploaded_entity\", jsonData._id);\r",
                  "\r",
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{host}}/api/uploadedEntities",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "uploadedEntities"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST /userPasswords",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": \"{{test_user}}\",\r\n    \"password\": \"lettuce\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/userPasswords",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userPasswords"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "GET",
      "item": [
        {
          "name": "GET /api",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "//Expected response format\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Test data types and format of the response\", function() {\r",
                  "    pm.expect(jsonData).to.be.an(\"object\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET /entries",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "//Expected response format\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Test data types and format of the response\", function() {\r",
                  "    pm.expect(jsonData).to.be.an(\"object\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/entries",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "entries"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET /userAccounts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "//Expected response format\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Test data types and format of the response\", function() {\r",
                  "    pm.expect(jsonData).to.be.an(\"object\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/api/userAccounts",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userAccounts"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET /userPasswords",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "//Expected response format\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Test data types and format of the response\", function() {\r",
                  "    pm.expect(jsonData).to.be.an(\"object\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/api/userPasswords",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userPasswords"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET /uploadedEntities",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "//Expected response format\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Test data types and format of the response\", function() {\r",
                  "    pm.expect(jsonData).to.be.an(\"object\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/api/uploadedEntities",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "uploadedEntities"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "PATCH",
      "item": [
        {
          "name": "PATCH /entries",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Text patched\", function() {\r",
                  "    pm.expect(jsonData.text).to.be.equal(\"Decided to paraglide instead.\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Decided to paraglide instead.\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/entries/{{entry_1}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "entries",
                "{{entry_1}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "PATCH /userAccounts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Surname patched\", function() {\r",
                  "    pm.expect(jsonData.surname).to.be.equal(\"Poindexter\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"surname\": \"Poindexter\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/userAccounts/{{test_user}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userAccounts",
                "{{test_user}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "PATCH /userPasswords",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Password patched\", function() {\r",
                  "    pm.expect(jsonData).to.be.equal(\"password updated.\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"password\": \"inserttexthere\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/userPasswords/{{test_user}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userPasswords",
                "{{test_user}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "PUT",
      "item": [
        {
          "name": "PUT /entries",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Entry updated\", function() {\r",
                  "    pm.expect(jsonData.text).to.be.equal(\"Traveled for vacation.\");\r",
                  "    pm.expect(jsonData.location).to.be.equal(\"Korea\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Traveled for vacation.\",\r\n    \"location\": \"Korea\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/entries/{{entry_2}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "entries",
                "{{entry_2}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "PUT /userAccounts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"Entry updated\", function() {\r",
                  "    pm.expect(jsonData.first_name).to.be.equal(\"Penny\");\r",
                  "    pm.expect(jsonData.surname).to.be.equal(\"Peterwhacker\");\r",
                  "    pm.expect(jsonData.email).to.be.equal(\"peterwhack@aol.com\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"first_name\": \"Penny\",\r\n    \"surname\": \"Peterwhacker\",\r\n    \"email\": \"peterwhack@aol.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/userAccounts/{{test_user}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userAccounts",
                "{{test_user}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "PUT /userPasswords",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const jsonData = pm.response.json();\r",
                  "pm.test(\"User password updated\", function() {\r",
                  "    pm.expect(jsonData).to.be.equal(\"User password updated.\");\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"password\": \"inserttexthere\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/userPasswords/{{test_user}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userPasswords",
                "{{test_user}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "DELETE",
      "item": [
        {
          "name": "DELETE /entries",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/entries",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "entries"
              ]
            }
          },
          "response": []
        },
        {
          "name": "DELETE /userAccounts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/api/userAccounts",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userAccounts"
              ]
            }
          },
          "response": []
        },
        {
          "name": "DELETE /userPasswords",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/api/userPasswords",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "userPasswords"
              ]
            }
          },
          "response": []
        },
        {
          "name": "DELETE /uploadedEntities",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Expected status code response\r",
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/api/uploadedEntities",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "uploadedEntities"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// pm.test(\"Status code is 200\", function() {",
          "//     pm.response.to.have.status(200);",
          "// });"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "host",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "test_user",
      "value": "null",
      "type": "string"
    },
    {
      "key": "entry_1",
      "value": ""
    },
    {
      "key": "entry_2",
      "value": ""
    },
    {
      "key": "uploaded_entity",
      "value": ""
    }
  ]
}